// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MurImageService.Models;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MurImageService.Migrations
{
    [DbContext(typeof(MurImageDbContext))]
    partial class MurImageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MurImageService.Models.MurImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.ToTable("mur_image", (string)null);
                });

            modelBuilder.Entity("MurImageService.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeCamera")
                        .HasColumnType("text")
                        .HasColumnName("code_camera");

                    b.Property<int>("IdMurImage")
                        .HasColumnType("integer")
                        .HasColumnName("id_murimage");

                    b.HasKey("Id");

                    b.HasIndex("IdMurImage");

                    b.ToTable("position", (string)null);
                });

            modelBuilder.Entity("MurImageService.Models.Position", b =>
                {
                    b.HasOne("MurImageService.Models.MurImage", "MurImage")
                        .WithMany("Positions")
                        .HasForeignKey("IdMurImage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MurImage");
                });

            modelBuilder.Entity("MurImageService.Models.MurImage", b =>
                {
                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
